[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:
    {% set bed_temp = params.BED|default(107)|float %}
    {% set extruder_temp = params.EXTRUDER|default(255)|float %}
#    BED_MESH_CLEAR                 ; clear mesh
    G28                            ; Home the printer
    G90                            ; Use absolute coordinates
    M83                            ; E Relative
    M117 Heating...                ; Set LCD Message
    M140 S{bed_temp}               ; Start bed heating
    M190 S{bed_temp}               ; Wait for bed to reach temperature
    M109 S{extruder_temp}          ; Set and wait for nozzle to reach temperature
    SET_FAN_SPEED FAN=Nevermore SPEED=1
    CLEAN_NOZZLE
    Attach_Probe_Lock
    QUAD_GANTRY_LEVEL              ; QGL
    G28 Z                           # Homes Z again after QGL
    CLEAN_NOZZLE
    _Probe_Unlock
    CALIBRATE_Z
#    BED_MESH_CALIBRATE
    SET_FAN_SPEED FAN=exhaust_fan SPEED=0.30
    SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-3.0 F3600                 ; retract filament
    G91                            ; relative positioning
    G0 Z1.00 X20.0 Y20.0 F20000    ; move nozzle to remove stringing
    SET_FAN_SPEED FAN=exhaust_fan SPEED=0.5                           ; turn ON Exhaust fan 50%
    G1 Z2 F3000                    ; move nozzle up 2mm
    G90                            ; absolute positioning
    G0 X40 Y350 F3600              ; park nozzle at rear above purge bucket
    TURN_OFF_HEATERS               ; Turn off heating
    BED_MESH_CLEAR
    UPDATE_DELAYED_GCODE ID=filter_off DURATION=180
    SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0
    #CHAMBER_LED_BLUE
    #RESTORE_GCODE_STATE NAME=STATE_PRINT_END

[gcode_macro M600]
#default_parameter_X: 40 ;purge buccket location
#default_parameter_Y: 350 ;purge buccket location
#default_parameter_Z: 3 ;purge buccket location
gcode:
  {% set X = params.X|default(40)|int %}
  {% set Y = params.X|default(350)|int %}
  {% set Z = params.X|default(3)|int %}
  M400
  SAVE_GCODE_STATE NAME=M600
  PAUSE
  G91
  G1 Z20 F900 ;Raise Z away from print
  G90
  G1 X{X} Y{Y} F18000 ;Move to purge bucket
  SAVE_GCODE_STATE NAME=FIRSTMOVE
  G1 Z{Z} F18000 ;Move to purge bucket
  G91
  #G1 E-120 F1000 ;Unload filament
  G1 E10 F200 ; Extrude a short distance before unloading to avoid blob forming
  G1 E-170 F2000 ;Retract 170 mm of filament at 2000 mm/minute speed, change 700 to the lenght of your bowdentube + 100 mm.
  RESTORE_GCODE_STATE NAME=M600

[gcode_macro LOAD_FILAMENT]
gcode:
  SAVE_GCODE_STATE NAME=LOAD
  MOVE_TO_PURGE
  G91
  G4 S5 ; wait 5 seconds
  G1 E200 F300 ;Feed 200 mm of filament at 300 mm/minute speed. Slow move.
  CLEAN_NOZZLE
  RESTORE_GCODE_STATE NAME=LOAD
  SET_IDLE_TIMEOUT TIMEOUT=7200

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
    # Parameters
    {% set z = params.Z|default(10)|int %}                                                   ; z hop amount
    
    {% if printer['pause_resume'].is_paused|int == 0 %}     
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}                              ; set z hop variable for reference in resume macro
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}    ; set hotend temp variable for reference in resume macro
                                
        SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0                           ; disable filament sensor       
        SAVE_GCODE_STATE NAME=PAUSE                                                          ; save current print position for resume                
        BASE_PAUSE                                                                           ; pause print
        {% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}       ; check that zhop doesn't exceed z max
            G91                                                                              ; relative positioning
            G1 Z{z} F900                                                                     ; raise Z up by z hop amount
        {% else %}
            { action_respond_info("Pause zhop exceeds maximum Z height.") }                  ; if z max is exceeded, show message and set zhop value for resume to 0
            SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
        {% endif %}
        G90                                                                                  ; absolute positioning
        G1 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} F6000   ; park toolhead at front center
        SAVE_GCODE_STATE NAME=PAUSEPARK                                                      ; save parked position in case toolhead is moved during the pause (otherwise the return zhop can error) 
        M104 S0                                                                              ; turn off hotend
        SET_IDLE_TIMEOUT TIMEOUT=43200                                                       ; set timeout to 12 hours
    {% endif %}

[gcode_macro RESUME]
rename_existing: BASE_RESUME
variable_zhop: 0
variable_etemp: 0
gcode:
    # Parameters
    {% set e = params.E|default(2.5)|int %}
    
    {% if printer['pause_resume'].is_paused|int == 1 %}
        SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1                          ; enable filament sensor
        #RESETRGB                                                                    ; reset LCD color
        SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}  ; set timeout back to configured value
        {% if etemp > 0 %}
            M109 S{etemp|int}                                                        ; wait for hotend to heat back up
        {% endif %}
        RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=100                     ; go back to parked position in case toolhead was moved during pause (otherwise the return zhop can error)  
        G91                                                                          ; relative positioning
        M83                                                                          ; relative extruder positioning
        {% if printer[printer.toolhead.extruder].temperature >= printer.configfile.settings.extruder.min_extrude_temp %}                                                
            G1 Z{zhop * -1} E{e} F900                                                ; prime nozzle by E, lower Z back down
        {% else %}                      
            G1 Z{zhop * -1} F900                                                     ; lower Z back down without priming (just in case we are testing the macro with cold hotend)
        {% endif %}                             
        RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=60                          ; restore position
        BASE_RESUME                                                                  ; resume print
    {% endif %}

#[gcode_macro UNPAUSE]
#gcode:
#  RESTORE_GCODE_STATE NAME=FIRSTMOVE MOVE=1
#  RESUME

[gcode_macro MOVE_TO_PURGE]
#   Move Nozzle to above PURGE BUCKET - not center
gcode:
    G1 X40 Y350 F6000

[gcode_macro LOAD_PETG]
gcode:
	# Extrude 600 mm
	G21 ;Let the printer know you are following this point with metric values
    G90 ;Let the printer know you are using absolute positioning
    MOVE_TO_PURGE
    M109 S225.000 ;Heat hotend to 210C
    G4 S5 ; wait 5 seconds
    G92 E0 ;Reset the position of the extruder
    G1 E200 F300 ;Feed 100 mm of filament at 400 mm/minute speed. Slow move.
    CLEAN_NOZZLE
    G92 E0 ;Reset the position of the extruder
    M400; finish move

[gcode_macro UNLOAD_PETG]
gcode:
  G21 ;Let the printer know you are following this point with metric values
  G90 ;Let the printer know you are using absolute positioning
  M109 S225.000 ;Heat hotend to 210C for PLA
  G92 E0 ;Reset the position of the extruder
  G1 E10 F300 ; Extrude a short distance before unloading to avoid blob forming
  G92 E0 ;Reset the position of the extruder
  G1 E-170 F3000 ;Retract 170 mm of filament at 1000 mm/minute speed, change 700 to the lenght of your bowdentube + 100 mm.
  G92 E0 ;Reset the position of the extruder
  M400; Wait for commad to finish
  M400; Wait for command to finish
  M84; Motor Free

[gcode_macro LOAD_PLA]
gcode:
	# Extrude 600 mm
	G21 ;Let the printer know you are following this point with metric values
    G90 ;Let the printer know you are using absolute positioning
    MOVE_TO_PURGE
    M109 S210.000 ;Heat hotend to 210C
    G4 S5 ; wait 5 seconds
    G92 E0 ;Reset the position of the extruder
    G1 E200 F300 ;Feed 100 mm of filament at 400 mm/minute speed. Slow move.
    CLEAN_NOZZLE
    G92 E0 ;Reset the position of the extruder
    M400; finish move

[gcode_macro UNLOAD_PLA]
gcode:
  G21 ;Let the printer know you are following this point with metric values
  G90 ;Let the printer know you are using absolute positioning
  M109 S210.000 ;Heat hotend to 210C for PLA
  G92 E0 ;Reset the position of the extruder
  G1 E10 F300 ; Extrude a short distance before unloading to avoid blob forming
  G92 E0 ;Reset the position of the extruder
  G1 E-170 F3000 ;Retract 170 mm of filament at 1000 mm/minute speed, change 700 to the lenght of your bowdentube + 100 mm.
  G92 E0 ;Reset the position of the extruder
  M400; Wait for commad to finish
  M400; Wait for command to finish
  M84; Motor Free

[gcode_macro LOAD_ASA]
gcode:
	# Extrude 600 mm
	G21 ;Let the printer know you are following this point with metric values
    G90 ;Let the printer know you are using absolute positioning
    MOVE_TO_PURGE
    M109 S250.000 ;Heat hotend to 210C
    G4 S5 ; wait 5 seconds
    G92 E0 ;Reset the position of the extruder
    G1 E200 F300 ;Feed 100 mm of filament at 400 mm/minute speed. Slow move.
    CLEAN_NOZZLE
    G92 E0 ;Reset the position of the extruder
    M400; finish move

[gcode_macro UNLOAD_ASA]
gcode:
  G21 ;Let the printer know you are following this point with metric values
  G90 ;Let the printer know you are using absolute positioning
  M109 S250.000 ;Heat hotend to 210C for PLA
  G92 E0 ;Reset the position of the extruder
  G1 E10 F300 ; Extrude a short distance before unloading to avoid blob forming
  G92 E0 ;Reset the position of the extruder
  G1 E-170 F2000 ;Retract 170 mm of filament at 1000 mm/minute speed, change 700 to the lenght of your bowdentube + 100 mm.
  G92 E0 ;Reset the position of the extruder
  M400; Wait for commad to finish
  M400; Wait for command to finish
  M84; Motor Free

[gcode_macro MOTOR_FREE]
gcode:
  M84 ;Set Motors on free move

####################################################################################
#            LED                                                                   #
####################################################################################
[gcode_macro SB_LED_BLUE]
gcode:
  SET_LED LED=neo RED=1 GREEN=1 BLUE=1

[gcode_macro CHAMBER_LED_ON]
gcode:
  SET_LED LED=chamber RED=1 GREEN=1 BLUE=1

[gcode_macro SB_LED_OFF]
gcode:
  SET_LED LED=neo RED=0 GREEN=0 BLUE=0

[gcode_macro SB_LED_ON]
gcode:
  SET_LED LED=neo RED=1 GREEN=1 BLUE=1



[gcode_macro G32]
gcode:
    SAVE_GCODE_STATE NAME=STATE_G32
    G90
    G28
    QUAD_GANTRY_LEVEL
    G28
    ##  Uncomment for for your size printer:
    #--------------------------------------------------------------------
    ##  Uncomment for 250mm build
    #G0 X125 Y125 Z30 F3600
    
    ##  Uncomment for 300 build
    #G0 X150 Y150 Z30 F3600
    
    ##  Uncomment for 350mm build
    G0 X175 Y175 Z30 F3600
    #--------------------------------------------------------------------
    RESTORE_GCODE_STATE NAME=STATE_G32

[delayed_gcode Welcome_1]
initial_duration: 0.5
gcode:
  SET_LED LED=neo RED=1 GREEN=1 BLUE=1 INDEX=3 TRANSMIT=1
[delayed_gcode Welcome_2]
initial_duration: 1
gcode:
  SET_LED LED=neo RED=1 GREEN=1 BLUE=1 INDEX=2 TRANSMIT=1
[delayed_gcode Welcome_3]
initial_duration: 1.5
gcode:
  SET_LED LED=neo RED=1 GREEN=0 BLUE=0 INDEX=1 TRANSMIT=1

[gcode_macro update_git]
gcode:
    RUN_SHELL_COMMAND CMD=update_git_script

[gcode_shell_command update_git_script]
command: bash /home/pi/klipper-backup/script.sh
timeout: 90.0
verbose: True